# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Continuous Integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

      
    # Restaurar dependÃªncias para o projeto de testes
    - name: Restore dependencies (Tests)
      run: dotnet restore tests/GitHubActionsProject.Tests/GitHubActionsProject.Tests.csproj

    # Build do projeto de testes
    - name: Build the test project
      run: dotnet build tests/GitHubActionsProject.Tests/GitHubActionsProject.Tests.csproj --no-restore --configuration Release

    - name: Test
      run: dotnet test tests/GitHubActionsProject.Tests/GitHubActionsProject.Tests.csproj --no-build --configuration Release --verbosity normal  

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Start postgree
      run:  docker compose up -d postgres

    - name: Set environment variable for connection string
      run: echo "ConnectionStrings_DefaultConnection=${{ secrets.CONNECTIONSTRINGS_DEFAULTCONNECTION }}" >> $GITHUB_ENV
  
    - name: Restore dependencies 
      run: dotnet restore src/GitHubActionsProject.API/GitHubActionsProject.API.csproj

    - name: Build
      run: dotnet build src/GitHubActionsProject.API/GitHubActionsProject.API.csproj --no-restore --configuration Release
    
    # Upload Artefato (Exemplo: pasta bin/Release)
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: GitHubActionsProject-Release
        path: |
          src/GitHubActionsProject.API/bin/Release/
          tests/GitHubActionsProject.Tests/bin/Release/
